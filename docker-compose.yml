version: '3'
services:
  backend:
    build:
      context: .
    ports:
      - "${SERVER_PORT}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_JDBC_URL: ${POSTGRES_JDBC_URL}
      SERVER_PORT: 8080
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_BOT_ENABLED: ${TELEGRAM_BOT_ENABLED}
      YANDEX_API_KEY: ${YANDEX_API_KEY}
      YANDEX_MODEL_FOLDER: ${YANDEX_MODEL_FOLDER}
      LLM_ENABLED: ${LLM_ENABLED}
  postgres:
    image: 'postgres:latest'
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USERNAME}
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
volumes:
  db-data:
  ad-images:
  grafana-storage:
  prometheus-storage: